"""init database tables

Revision ID: 5d5e3002b225
Revises: 
Create Date: 2025-03-05 14:25:51.904683

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5d5e3002b225'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('officers',
    sa.Column('officer_id', sa.Integer(), nullable=False),
    sa.Column('officer_full_name', sa.String(length=30), nullable=False),
    sa.Column('officer_phone', sa.String(length=10), nullable=False),
    sa.Column('officer_email', sa.String(length=250), nullable=False),
    sa.Column('officer_aadhar', sa.String(length=12), nullable=False),
    sa.Column('officer_hashed_password', sa.String(), nullable=False),
    sa.Column('officer_role', postgresql.ENUM('supervisor', 'cdpo', 'dpo', name='officerrole', create_type=False), nullable=False),
    sa.Column('officer_created_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('officer_id')
    )
    op.create_table('anganwadi_centers',
    sa.Column('center_id', sa.Integer(), nullable=False),
    sa.Column('center_code', sa.String(length=30), nullable=False),
    sa.Column('center_name', sa.String(length=30), nullable=False),
    sa.Column('center_address', sa.String(length=500), nullable=False),
    sa.Column('center_supervisor_id', sa.Integer(), nullable=False),
    sa.Column('center_created_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['center_supervisor_id'], ['officers.officer_id'], ),
    sa.PrimaryKeyConstraint('center_id'),
    sa.UniqueConstraint('center_code')
    )
    op.create_table('staffs',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('staff_full_name', sa.String(length=30), nullable=False),
    sa.Column('staff_phone', sa.String(length=10), nullable=False),
    sa.Column('staff_aadhar', sa.String(length=12), nullable=False),
    sa.Column('staff_hashed_mpin', sa.String(length=5), nullable=False),
    sa.Column('staff_role', postgresql.ENUM('worker', 'helper', name='staffrole', create_type=False), nullable=False),
    sa.Column('staff_center_id', sa.Integer(), nullable=False),
    sa.Column('staff_created_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['staff_center_id'], ['anganwadi_centers.center_id'], ),
    sa.PrimaryKeyConstraint('staff_id')
    )
    op.create_table('students',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('student_name', sa.String(length=30), nullable=False),
    sa.Column('student_dob', sa.DATE(), nullable=True),
    sa.Column('student_gender', postgresql.ENUM('male', 'female', 'other', name='studentgender', create_type=False), nullable=False),
    sa.Column('student_mother_name', sa.String(length=30), nullable=False),
    sa.Column('student_father_name', sa.String(length=30), nullable=False),
    sa.Column('student_phone', sa.String(length=10), nullable=False),
    sa.Column('student_created_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('student_center_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_center_id'], ['anganwadi_centers.center_id'], ),
    sa.PrimaryKeyConstraint('student_id')
    )
    sa.Enum('active', 'inactive', 'expired', 'trial', 'overdue', 'cancelled', 'pending', 'hold', name='statuschoice').drop(op.get_bind())
    sa.Enum('male', 'female', name='genderchoice').drop(op.get_bind())
    sa.Enum('trainer', 'personal', name='trainingchoice').drop(op.get_bind())
    sa.Enum('regular', 'advance', name='planchoice').drop(op.get_bind())
    sa.Enum('morning', 'evening', name='batchchoice').drop(op.get_bind())
    sa.Enum('cash', 'online', name='paymentmethodchoice').drop(op.get_bind())
    sa.Enum('admin', 'staff', 'member', name='userrole').drop(op.get_bind())
    sa.Enum('r', name='hg').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('r', name='hg').create(op.get_bind())
    sa.Enum('admin', 'staff', 'member', name='userrole').create(op.get_bind())
    sa.Enum('cash', 'online', name='paymentmethodchoice').create(op.get_bind())
    sa.Enum('morning', 'evening', name='batchchoice').create(op.get_bind())
    sa.Enum('regular', 'advance', name='planchoice').create(op.get_bind())
    sa.Enum('trainer', 'personal', name='trainingchoice').create(op.get_bind())
    sa.Enum('male', 'female', name='genderchoice').create(op.get_bind())
    sa.Enum('active', 'inactive', 'expired', 'trial', 'overdue', 'cancelled', 'pending', 'hold', name='statuschoice').create(op.get_bind())
    op.drop_table('students')
    op.drop_table('staffs')
    op.drop_table('anganwadi_centers')
    op.drop_table('officers')
    # ### end Alembic commands ###
